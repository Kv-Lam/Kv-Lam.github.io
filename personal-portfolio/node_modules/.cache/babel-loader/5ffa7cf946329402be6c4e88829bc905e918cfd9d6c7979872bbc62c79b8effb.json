{"ast":null,"code":"var _jsxFileName = \"/home/klam/personal/portfolioWebsite/personal-portfolio/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport { Container, Row, Col } from \"react-bootstrap\";\n// import headerImage from \"../assets/images/\"\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Banner = () => {\n  _s();\n  const textsToRotate = [\"Software Developer\", \"ML/AI Enthusiast\", \"Computer Science Undergraduate @ UTK\"]; //Text to diplay via animation.\n  const [loopNum, setLoopNum] = useState(0); //Which string in stringsToRotate the animation is on.\n  const [isDeleting, setIsDeleting] = useState(false); //Default false since it must be typed out via animation. Will become true when being deleted.\n  const [text, setText] = useState(''); //Current text that is being shown by the animation.\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const period = 2000;\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      ticker();\n    }, delta);\n    return () => {\n      clearInterval(ticker);\n    };\n  }, [text]); //Clears interval everytime text is updated.\n\n  const tick = () => {\n    let i = loopNum % textsToRotate.length();\n    let fullText = textsToRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1); //If the text is being deleted, then remove a char from the text. If it is not being deleted, add a char to the text.\n\n    setText(updatedText);\n    if (isDeleting) {\n      setDelta(previousDelta => previousDelta / 2);\n    }\n    if (!isDeleting && updatedText == fullText) {\n      setIsDeleting(true);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setDelta(500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner\",\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagline\",\n            children: \"Welcome to my Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [`Hi, I am Kevin Lam`, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wrap\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some sample text!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 5,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: headerImage,\n            alt: \"Header Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Banner, \"mMUCaxT9Zkzi6UyxtZ51goTRse0=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["Container","Row","Col","useState","useEffect","jsxDEV","_jsxDEV","Banner","_s","textsToRotate","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","period","ticker","setInterval","clearInterval","tick","i","length","fullText","updatedText","substring","previousDelta","className","id","children","xs","md","xl","fileName","_jsxFileName","lineNumber","columnNumber","src","headerImage","alt","_c","$RefreshReg$"],"sources":["/home/klam/personal/portfolioWebsite/personal-portfolio/src/components/Banner.js"],"sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\"\n// import headerImage from \"../assets/images/\"\nimport { useState, useEffect } from \"react\"\n\nexport const Banner = () => {\n    const textsToRotate = [\"Software Developer\", \"ML/AI Enthusiast\", \"Computer Science Undergraduate @ UTK\"] //Text to diplay via animation.\n    const [loopNum, setLoopNum] = useState(0); //Which string in stringsToRotate the animation is on.\n    const [isDeleting, setIsDeleting] = useState(false); //Default false since it must be typed out via animation. Will become true when being deleted.\n    const [text, setText] = useState(''); //Current text that is being shown by the animation.\n    const [delta, setDelta] = useState(300 - Math.random() * 100);\n    const period = 2000;\n\n    useEffect(() => {\n        let ticker = setInterval(() => {\n            ticker();\n        }, delta)\n\n        return () => {clearInterval(ticker)};\n    }, [text]) //Clears interval everytime text is updated.\n\n    const tick = () => {\n        let i = loopNum % textsToRotate.length();\n        let fullText = textsToRotate[i];\n        let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1); //If the text is being deleted, then remove a char from the text. If it is not being deleted, add a char to the text.\n\n        setText(updatedText);\n        \n        if(isDeleting) {\n            setDelta(previousDelta => previousDelta / 2);\n        }\n        \n        if(!isDeleting && (updatedText == fullText)) {\n            setIsDeleting(true);\n            setDelta(period);\n        } \n        else if(isDeleting && updatedText === '') {\n            setIsDeleting(false);\n            setLoopNum(loopNum + 1);\n            setDelta(500);\n        }\n    }\n\n    return (\n\n        <section className=\"banner\" id=\"home\">\n            <Container>\n                <Row className=\"align-items-center\">\n                    <Col xs={12} md={6} xl={7}>\n                        <span className=\"tagline\">Welcome to my Portfolio</span>\n                        <h1>{`Hi, I am Kevin Lam`}<span className=\"wrap\">{text}</span></h1>\n                        <p>Some sample text!</p>\n                    </Col>\n                    <Col xs={12} md={6} xl={5}>\n                        <img src={headerImage} alt=\"Header Image\" />\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}