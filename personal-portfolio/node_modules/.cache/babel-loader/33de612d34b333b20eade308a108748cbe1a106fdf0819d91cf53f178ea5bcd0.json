{"ast":null,"code":"import{Container,Row,Col}from\"react-bootstrap\";import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Banner=()=>{const textsToRotate=[\"Comp. Sci. Undergraduate @ UTK\",\"Software Developer\",\"ML/AI Enthusiast\"];//Text to diplay via animation.\nconst[loopNum,setLoopNum]=useState(0);//Which string in stringsToRotate the animation is on.\nconst[isDeleting,setIsDeleting]=useState(false);//Default false since it must be typed out via animation. Will become true when being deleted.\nconst[text,setText]=useState('');//Current text that is being shown by the animation.\nconst[delta,setDelta]=useState(300-Math.random()*100);const period=2000;useEffect(()=>{let ticker=setInterval(()=>{tick();},delta);return()=>{clearInterval(ticker);};},[text]);//Clears interval everytime text is updated.\nconst tick=()=>{let i=loopNum%textsToRotate.length;let fullText=textsToRotate[i];let updatedText=isDeleting?fullText.substring(0,text.length-1):fullText.substring(0,text.length+1);//If the text is being deleted, then remove a char from the text. If it is not being deleted, add a char to the text.\nsetText(updatedText);if(isDeleting){setDelta(previousDelta=>previousDelta/2);}if(!isDeleting&&updatedText==fullText){setIsDeleting(true);setDelta(period);}else if(isDeleting&&updatedText===''){setIsDeleting(false);setLoopNum(loopNum+1);setDelta(500);}};return/*#__PURE__*/_jsx(\"section\",{className:\"banner\",id:\"home\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsxs(Col,{xs:12,md:12,xl:12,children:[/*#__PURE__*/_jsx(\"span\",{className:\"tagline\",children:\"Welcome to my Portfolio\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Hi, I am Kevin Lam. \",/*#__PURE__*/_jsxs(\"span\",{className:\"wrap\",children:[\"A \",text]})]})]})})})});};export default Banner;","map":{"version":3,"names":["Container","Row","Col","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Banner","textsToRotate","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","period","ticker","setInterval","tick","clearInterval","i","length","fullText","updatedText","substring","previousDelta","className","id","children","xs","md","xl"],"sources":["/home/klam/personal/portfolioWebsite/personal-portfolio/Kv-Lam.github.io/personal-portfolio/src/components/Banner.js"],"sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\"\nimport { useState, useEffect } from \"react\"\n\nexport const Banner = () => {\n    const textsToRotate = [\"Comp. Sci. Undergraduate @ UTK\", \"Software Developer\", \"ML/AI Enthusiast\"] //Text to diplay via animation.\n    const [loopNum, setLoopNum] = useState(0); //Which string in stringsToRotate the animation is on.\n    const [isDeleting, setIsDeleting] = useState(false); //Default false since it must be typed out via animation. Will become true when being deleted.\n    const [text, setText] = useState(''); //Current text that is being shown by the animation.\n    const [delta, setDelta] = useState(300 - Math.random() * 100);\n    const period = 2000;\n\n    useEffect(() => {\n        let ticker = setInterval(() => {\n            tick();\n        }, delta)\n\n        return () => {clearInterval(ticker)};\n    }, [text]) //Clears interval everytime text is updated.\n\n    const tick = () => {\n        let i = loopNum % textsToRotate.length;\n        let fullText = textsToRotate[i];\n        let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1); //If the text is being deleted, then remove a char from the text. If it is not being deleted, add a char to the text.\n\n        setText(updatedText);\n        \n        if(isDeleting) {\n            setDelta(previousDelta => previousDelta / 2);\n        }\n        \n        if(!isDeleting && (updatedText == fullText)) {\n            setIsDeleting(true);\n            setDelta(period);\n        } \n        else if(isDeleting && updatedText === '') {\n            setIsDeleting(false);\n            setLoopNum(loopNum + 1);\n            setDelta(500);\n        }\n    }\n\n    return (\n        <section className=\"banner\" id=\"home\">\n            <Container>\n                <Row className=\"align-items-center\">\n                    <Col xs={12} md={12} xl={12}>\n                        <span className=\"tagline\">Welcome to my Portfolio</span>\n                        <h1>{`Hi, I am Kevin Lam. `}<span className=\"wrap\">A {text}</span></h1>\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\nexport default Banner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}